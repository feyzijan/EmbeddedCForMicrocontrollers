

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Thu Nov 11 23:07:29 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	18F67K40
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	text0,global,reloc=2,class=CODE,delta=1
    11                           	psect	text1,global,reloc=2,class=CODE,delta=1
    12                           	psect	text2,global,reloc=2,class=CODE,delta=1
    13                           	psect	text3,global,reloc=2,class=CODE,delta=1
    14                           	psect	text4,global,reloc=2,class=CODE,delta=1
    15                           	psect	text5,global,reloc=2,class=CODE,delta=1
    16                           	psect	text6,global,reloc=2,class=CODE,delta=1
    17                           	psect	text7,global,reloc=2,class=CODE,delta=1
    18                           	psect	text8,global,reloc=2,class=CODE,delta=1
    19                           	psect	text9,global,reloc=2,class=CODE,delta=1
    20                           	psect	text10,global,reloc=2,class=CODE,delta=1
    21                           	psect	text11,global,reloc=2,class=CODE,delta=1
    22                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    23                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    24                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    25                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    26                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    27                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    28  0000                     
    29                           ; Version 2.35
    30                           ; Generated 05/05/2021 GMT
    31                           ; 
    32                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    33                           ; All rights reserved.
    34                           ; 
    35                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    36                           ; 
    37                           ; Redistribution and use in source and binary forms, with or without modification, are
    38                           ; permitted provided that the following conditions are met:
    39                           ; 
    40                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    41                           ;        conditions and the following disclaimer.
    42                           ; 
    43                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    44                           ;        of conditions and the following disclaimer in the documentation and/or other
    45                           ;        materials provided with the distribution. Publication is not required when
    46                           ;        this file is used in an embedded application.
    47                           ; 
    48                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    49                           ;        software without specific prior written permission.
    50                           ; 
    51                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    52                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    53                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    54                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    55                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    56                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    57                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    58                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    59                           ; 
    60                           ; 
    61                           ; Code-generator required, PIC18F67K40 Definitions
    62                           ; 
    63                           ; SFR Addresses
    64  0000                     
    65                           	psect	idataCOMRAM
    66  000572                     __pidataCOMRAM:
    67                           	callstack 0
    68                           
    69                           ;initializer for _test_mode
    70  000572  01                 	db	1
    71                           
    72                           ;initializer for _day_of_year
    73  000573  012F               	dw	303
    74                           
    75                           ;initializer for _dst_fwd
    76  000575  01                 	db	1
    77                           
    78                           ;initializer for _year
    79  000576  15                 	db	21
    80                           
    81                           ;initializer for _day_of_week
    82  000577  06                 	db	6
    83  0000                     _IPR5bits	set	3620
    84  0000                     _PIE5bits	set	3630
    85  0000                     _IPR0bits	set	3615
    86  0000                     _PIE0bits	set	3625
    87  0000                     _PIR2bits	set	3637
    88  0000                     _PIR0bits	set	3635
    89  0000                     _PIE2bits	set	3627
    90  0000                     _CM1CON1bits	set	3793
    91  0000                     _CM1CON0bits	set	3792
    92  0000                     _CM1PCHbits	set	3795
    93  0000                     _CM1NCHbits	set	3794
    94  0000                     _DAC1CON1bits	set	3783
    95  0000                     _DAC1CON0bits	set	3782
    96  0000                     _T1GCONbits	set	4048
    97  0000                     _TMR1H	set	4046
    98  0000                     _T1CONbits	set	4047
    99  0000                     _TMR1CLKbits	set	4050
   100  0000                     _T0CON0bits	set	4053
   101  0000                     _T0CON1bits	set	4054
   102  0000                     _TMR1L	set	4045
   103  0000                     _TRISHbits	set	3976
   104  0000                     _LATHbits	set	3968
   105  0000                     _TMR0L	set	4051
   106  0000                     _TMR0H	set	4052
   107  0000                     _INTCONbits	set	4082
   108  0000                     _LATBbits	set	3962
   109  0000                     _LATFbits	set	3966
   110  0000                     _LATAbits	set	3961
   111  0000                     _TRISBbits	set	3970
   112  0000                     _TRISFbits	set	3974
   113  0000                     _TRISAbits	set	3969
   114                           
   115                           ; #config settings
   116                           
   117                           	psect	cinit
   118  0004C8                     __pcinit:
   119                           	callstack 0
   120  0004C8                     start_initialization:
   121                           	callstack 0
   122  0004C8                     __initialization:
   123                           	callstack 0
   124                           
   125                           ; Initialize objects allocated to COMRAM (6 bytes)
   126                           ; load TBLPTR registers with __pidataCOMRAM
   127  0004C8  0E72               	movlw	low __pidataCOMRAM
   128  0004CA  6EF6               	movwf	tblptrl,c
   129  0004CC  0E05               	movlw	high __pidataCOMRAM
   130  0004CE  6EF7               	movwf	tblptrh,c
   131  0004D0  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   132  0004D2  6EF8               	movwf	tblptru,c
   133  0004D4  EE00  F00E         	lfsr	0,__pdataCOMRAM
   134  0004D8  EE10 F006          	lfsr	1,6
   135  0004DC                     copy_data0:
   136  0004DC  0009               	tblrd		*+
   137  0004DE  CFF5 FFEE          	movff	tablat,postinc0
   138  0004E2  50E5               	movf	postdec1,w,c
   139  0004E4  50E1               	movf	fsr1l,w,c
   140  0004E6  E1FA               	bnz	copy_data0
   141                           
   142                           ; Clear objects allocated to COMRAM (3 bytes)
   143  0004E8  6A16               	clrf	(__pbssCOMRAM+2)& (0+255),c
   144  0004EA  6A15               	clrf	(__pbssCOMRAM+1)& (0+255),c
   145  0004EC  6A14               	clrf	__pbssCOMRAM& (0+255),c
   146  0004EE                     end_of_initialization:
   147                           	callstack 0
   148  0004EE                     __end_of__initialization:
   149                           	callstack 0
   150  0004EE  9017               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   151  0004F0  9217               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   152  0004F2  0100               	movlb	0
   153  0004F4  EF3F  F000         	goto	_main	;jump to C main() function
   154                           
   155                           	psect	bssCOMRAM
   156  000014                     __pbssCOMRAM:
   157                           	callstack 0
   158  000014                     _dst_bwd:
   159                           	callstack 0
   160  000014                     	ds	1
   161  000015                     _leap:
   162                           	callstack 0
   163  000015                     	ds	1
   164  000016                     _hour:
   165                           	callstack 0
   166  000016                     	ds	1
   167                           
   168                           	psect	dataCOMRAM
   169  00000E                     __pdataCOMRAM:
   170                           	callstack 0
   171  00000E                     _test_mode:
   172                           	callstack 0
   173  00000E                     	ds	1
   174  00000F                     _day_of_year:
   175                           	callstack 0
   176  00000F                     	ds	2
   177  000011                     _dst_fwd:
   178                           	callstack 0
   179  000011                     	ds	1
   180  000012                     _year:
   181                           	callstack 0
   182  000012                     	ds	1
   183  000013                     _day_of_week:
   184                           	callstack 0
   185  000013                     	ds	1
   186                           
   187                           	psect	cstackCOMRAM
   188  000001                     __pcstackCOMRAM:
   189                           	callstack 0
   190  000001                     ??_HighISR:
   191  000001                     
   192                           ; 1 bytes @ 0x0
   193  000001                     	ds	1
   194  000002                     ??_LEDarray_disp_bin:
   195  000002                     check_dst_bwd@phour:
   196                           	callstack 0
   197  000002                     check_dst_fwd@phour:
   198                           	callstack 0
   199  000002                     new_day@phour:
   200                           	callstack 0
   201  000002                     new_year@pday_of_year:
   202                           	callstack 0
   203                           
   204                           ; 2 bytes @ 0x1
   205  000002                     	ds	1
   206  000003                     LEDarray_disp_bin@number:
   207                           	callstack 0
   208                           
   209                           ; 1 bytes @ 0x2
   210  000003                     	ds	1
   211  000004                     check_dst_bwd@pday_of_week:
   212                           	callstack 0
   213  000004                     check_dst_fwd@pday_of_week:
   214                           	callstack 0
   215  000004                     new_day@pday_of_week:
   216                           	callstack 0
   217  000004                     new_year@pyear:
   218                           	callstack 0
   219                           
   220                           ; 2 bytes @ 0x3
   221  000004                     	ds	2
   222  000006                     check_dst_bwd@pdst_bwd:
   223                           	callstack 0
   224  000006                     check_dst_fwd@pdst_fwd:
   225                           	callstack 0
   226  000006                     new_day@pday_of_year:
   227                           	callstack 0
   228  000006                     new_year@pleap:
   229                           	callstack 0
   230                           
   231                           ; 2 bytes @ 0x5
   232  000006                     	ds	2
   233  000008                     new_year@pdst_bwd:
   234                           	callstack 0
   235                           
   236                           ; 2 bytes @ 0x7
   237  000008                     	ds	2
   238  00000A                     new_year@pdst_fwd:
   239                           	callstack 0
   240                           
   241                           ; 2 bytes @ 0x9
   242  00000A                     	ds	2
   243  00000C                     
   244                           ; 1 bytes @ 0xB
   245  00000C                     	ds	2
   246  00000E                     
   247                           ; 1 bytes @ 0xD
   248 ;;
   249 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   250 ;;
   251 ;; *************** function _main *****************
   252 ;; Defined at:
   253 ;;		line 36 in file "main.c"
   254 ;; Parameters:    Size  Location     Type
   255 ;;		None
   256 ;; Auto vars:     Size  Location     Type
   257 ;;		None
   258 ;; Return value:  Size  Location     Type
   259 ;;                  1    wreg      void 
   260 ;; Registers used:
   261 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
   262 ;; Tracked objects:
   263 ;;		On entry : 0/0
   264 ;;		On exit  : 0/0
   265 ;;		Unchanged: 0/0
   266 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   267 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   268 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   269 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   270 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   271 ;;Total ram usage:        0 bytes
   272 ;; Hardware stack levels required when called: 3
   273 ;; This function calls:
   274 ;;		_Comp1_init
   275 ;;		_Interrupts_init
   276 ;;		_LEDarray_disp_bin
   277 ;;		_LEDarray_init
   278 ;;		_Timer0_init
   279 ;;		_Timer1_init
   280 ;;		_check_dst_bwd
   281 ;;		_check_dst_fwd
   282 ;;		_new_day
   283 ;;		_new_year
   284 ;; This function is called by:
   285 ;;		Startup code after reset
   286 ;; This function uses a non-reentrant model
   287 ;;
   288                           
   289                           	psect	text0
   290  00007E                     __ptext0:
   291                           	callstack 0
   292  00007E                     _main:
   293                           	callstack 28
   294  00007E                     
   295                           ;main.c: 44:     LATHbits.LATH3=0;
   296  00007E  9680               	bcf	128,3,c	;volatile
   297                           
   298                           ;main.c: 45:     TRISHbits.TRISH3=0;
   299  000080  9688               	bcf	136,3,c	;volatile
   300  000082                     
   301                           ;main.c: 48:     Comp1_init();
   302  000082  EC7C  F002         	call	_Comp1_init	;wreg free
   303  000086                     
   304                           ;main.c: 49:     Interrupts_init();
   305  000086  ECB4  F002         	call	_Interrupts_init	;wreg free
   306  00008A                     
   307                           ;main.c: 50:     LEDarray_init();
   308  00008A  EC9F  F002         	call	_LEDarray_init	;wreg free
   309                           
   310                           ;main.c: 51:     Timer0_init();
   311  00008E  ECF5  F001         	call	_Timer0_init	;wreg free
   312                           
   313                           ;main.c: 52:     Timer1_init();
   314  000092  EC8F  F002         	call	_Timer1_init	;wreg free
   315  000096                     l1163:
   316                           
   317                           ;main.c: 55:     {;main.c: 56:         hour = TMR1L;
   318  000096  CFCD F016          	movff	4045,_hour	;volatile
   319  00009A                     
   320                           ;main.c: 57:         LEDarray_disp_bin(hour);
   321  00009A  5016               	movf	_hour^0,w,c
   322  00009C  EC81  F001         	call	_LEDarray_disp_bin
   323  0000A0                     
   324                           ;main.c: 60:         if (hour > 0 && hour < 5 ) {
   325  0000A0  5016               	movf	_hour^0,w,c
   326  0000A2  B4D8               	btfsc	status,2,c
   327  0000A4  EF56  F000         	goto	u461
   328  0000A8  EF58  F000         	goto	u460
   329  0000AC                     u461:
   330  0000AC  EF65  F000         	goto	l116
   331  0000B0                     u460:
   332  0000B0  0E05               	movlw	5
   333  0000B2  6016               	cpfslt	_hour^0,c
   334  0000B4  EF5E  F000         	goto	u471
   335  0000B8  EF60  F000         	goto	u470
   336  0000BC                     u471:
   337  0000BC  EF65  F000         	goto	l116
   338  0000C0                     u470:
   339  0000C0                     
   340                           ;main.c: 61:             LATHbits.LATH3=0;
   341  0000C0  9680               	bcf	128,3,c	;volatile
   342                           
   343                           ;main.c: 62:             DAC1CON0bits.DAC1EN=0;
   344  0000C2  010E               	movlb	14	; () banked
   345  0000C4  9FC6               	bcf	198,7,b	;volatile
   346                           
   347                           ;main.c: 63:         } else {
   348  0000C6  EF67  F000         	goto	l1173
   349  0000CA                     l116:
   350                           
   351                           ;main.c: 64:             DAC1CON0bits.DAC1EN=1;
   352  0000CA  010E               	movlb	14	; () banked
   353  0000CC  8FC6               	bsf	198,7,b	;volatile
   354  0000CE                     l1173:
   355                           
   356                           ; BSR set to: 14
   357                           ;main.c: 68:         if (hour == 24) {
   358  0000CE  0E18               	movlw	24
   359  0000D0  1816               	xorwf	_hour^0,w,c
   360  0000D2  A4D8               	btfss	status,2,c
   361  0000D4  EF6E  F000         	goto	u481
   362  0000D8  EF70  F000         	goto	u480
   363  0000DC                     u481:
   364  0000DC  EFA6  F000         	goto	l1185
   365  0000E0                     u480:
   366  0000E0                     
   367                           ; BSR set to: 14
   368                           ;main.c: 70:             new_day(&hour, &day_of_week, &day_of_year);
   369  0000E0  0E16               	movlw	low _hour
   370  0000E2  6E02               	movwf	new_day@phour^0,c
   371  0000E4  0E00               	movlw	high _hour
   372  0000E6  6E03               	movwf	(new_day@phour+1)^0,c
   373  0000E8  0E13               	movlw	low _day_of_week
   374  0000EA  6E04               	movwf	new_day@pday_of_week^0,c
   375  0000EC  0E00               	movlw	high _day_of_week
   376  0000EE  6E05               	movwf	(new_day@pday_of_week+1)^0,c
   377  0000F0  0E0F               	movlw	low _day_of_year
   378  0000F2  6E06               	movwf	new_day@pday_of_year^0,c
   379  0000F4  0E00               	movlw	high _day_of_year
   380  0000F6  6E07               	movwf	(new_day@pday_of_year+1)^0,c
   381  0000F8  ECC3  F001         	call	_new_day	;wreg free
   382  0000FC  0E6F               	movlw	111
   383  0000FE  5C0F               	subwf	_day_of_year^0,w,c
   384  000100  0E01               	movlw	1
   385  000102  5810               	subwfb	(_day_of_year+1)^0,w,c
   386  000104  A0D8               	btfss	status,0,c
   387  000106  EF87  F000         	goto	u491
   388  00010A  EF89  F000         	goto	u490
   389  00010E                     u491:
   390  00010E  EFA6  F000         	goto	l1185
   391  000112                     u490:
   392  000112  A015               	btfss	_leap^0,0,c
   393  000114  EF8E  F000         	goto	u501
   394  000118  EF90  F000         	goto	u500
   395  00011C                     u501:
   396  00011C  EFA6  F000         	goto	l1185
   397  000120                     u500:
   398  000120                     
   399                           ;main.c: 73:                 new_year(&day_of_year, &year, &leap, &dst_bwd, &dst_fwd);
   400  000120  0E0F               	movlw	low _day_of_year
   401  000122  6E02               	movwf	new_year@pday_of_year^0,c
   402  000124  0E00               	movlw	high _day_of_year
   403  000126  6E03               	movwf	(new_year@pday_of_year+1)^0,c
   404  000128  0E12               	movlw	low _year
   405  00012A  6E04               	movwf	new_year@pyear^0,c
   406  00012C  0E00               	movlw	high _year
   407  00012E  6E05               	movwf	(new_year@pyear+1)^0,c
   408  000130  0E15               	movlw	low _leap
   409  000132  6E06               	movwf	new_year@pleap^0,c
   410  000134  0E00               	movlw	high _leap
   411  000136  6E07               	movwf	(new_year@pleap+1)^0,c
   412  000138  0E14               	movlw	low _dst_bwd
   413  00013A  6E08               	movwf	new_year@pdst_bwd^0,c
   414  00013C  0E00               	movlw	high _dst_bwd
   415  00013E  6E09               	movwf	(new_year@pdst_bwd+1)^0,c
   416  000140  0E11               	movlw	low _dst_fwd
   417  000142  6E0A               	movwf	new_year@pdst_fwd^0,c
   418  000144  0E00               	movlw	high _dst_fwd
   419  000146  6E0B               	movwf	(new_year@pdst_fwd+1)^0,c
   420  000148  EC20  F001         	call	_new_year	;wreg free
   421  00014C                     l1185:
   422                           
   423                           ;main.c: 78:         if(dst_fwd == 0 && day_of_year > 83){
   424  00014C  5011               	movf	_dst_fwd^0,w,c
   425  00014E  A4D8               	btfss	status,2,c
   426  000150  EFAC  F000         	goto	u511
   427  000154  EFAE  F000         	goto	u510
   428  000158                     u511:
   429  000158  EFE1  F000         	goto	l1197
   430  00015C                     u510:
   431  00015C  5010               	movf	(_day_of_year+1)^0,w,c
   432  00015E  E109               	bnz	u520
   433  000160  0E54               	movlw	84
   434  000162  5C0F               	subwf	_day_of_year^0,w,c
   435  000164  A0D8               	btfss	status,0,c
   436  000166  EFB7  F000         	goto	u521
   437  00016A  EFB9  F000         	goto	u520
   438  00016E                     u521:
   439  00016E  EFE1  F000         	goto	l1197
   440  000172                     u520:
   441  000172                     
   442                           ;main.c: 79:             if( (leap == 0) || ((leap & 1) && (day_of_year > 84)) ) {
   443  000172  5015               	movf	_leap^0,w,c
   444  000174  B4D8               	btfsc	status,2,c
   445  000176  EFBF  F000         	goto	u531
   446  00017A  EFC1  F000         	goto	u530
   447  00017E                     u531:
   448  00017E  EFD3  F000         	goto	l1195
   449  000182                     u530:
   450  000182  A015               	btfss	_leap^0,0,c
   451  000184  EFC6  F000         	goto	u541
   452  000188  EFC8  F000         	goto	u540
   453  00018C                     u541:
   454  00018C  EFE1  F000         	goto	l1197
   455  000190                     u540:
   456  000190  5010               	movf	(_day_of_year+1)^0,w,c
   457  000192  E109               	bnz	u550
   458  000194  0E55               	movlw	85
   459  000196  5C0F               	subwf	_day_of_year^0,w,c
   460  000198  A0D8               	btfss	status,0,c
   461  00019A  EFD1  F000         	goto	u551
   462  00019E  EFD3  F000         	goto	u550
   463  0001A2                     u551:
   464  0001A2  EFE1  F000         	goto	l1197
   465  0001A6                     u550:
   466  0001A6                     l1195:
   467                           
   468                           ;main.c: 80:                 check_dst_fwd(&hour,&day_of_week,&dst_fwd);
   469  0001A6  0E16               	movlw	low _hour
   470  0001A8  6E02               	movwf	check_dst_fwd@phour^0,c
   471  0001AA  0E00               	movlw	high _hour
   472  0001AC  6E03               	movwf	(check_dst_fwd@phour+1)^0,c
   473  0001AE  0E13               	movlw	low _day_of_week
   474  0001B0  6E04               	movwf	check_dst_fwd@pday_of_week^0,c
   475  0001B2  0E00               	movlw	high _day_of_week
   476  0001B4  6E05               	movwf	(check_dst_fwd@pday_of_week+1)^0,c
   477  0001B6  0E11               	movlw	low _dst_fwd
   478  0001B8  6E06               	movwf	check_dst_fwd@pdst_fwd^0,c
   479  0001BA  0E00               	movlw	high _dst_fwd
   480  0001BC  6E07               	movwf	(check_dst_fwd@pdst_fwd+1)^0,c
   481  0001BE  EC1E  F002         	call	_check_dst_fwd	;wreg free
   482  0001C2                     l1197:
   483                           
   484                           ;main.c: 85:         if(dst_bwd == 0 && day_of_year > 297){
   485  0001C2  5014               	movf	_dst_bwd^0,w,c
   486  0001C4  A4D8               	btfss	status,2,c
   487  0001C6  EFE7  F000         	goto	u561
   488  0001CA  EFE9  F000         	goto	u560
   489  0001CE                     u561:
   490  0001CE  EF4B  F000         	goto	l1163
   491  0001D2                     u560:
   492  0001D2  0E2A               	movlw	42
   493  0001D4  5C0F               	subwf	_day_of_year^0,w,c
   494  0001D6  0E01               	movlw	1
   495  0001D8  5810               	subwfb	(_day_of_year+1)^0,w,c
   496  0001DA  A0D8               	btfss	status,0,c
   497  0001DC  EFF2  F000         	goto	u571
   498  0001E0  EFF4  F000         	goto	u570
   499  0001E4                     u571:
   500  0001E4  EF4B  F000         	goto	l1163
   501  0001E8                     u570:
   502  0001E8                     
   503                           ;main.c: 86:             if((leap == 0) || ((leap & 1) && (day_of_year > 298)) ){
   504  0001E8  5015               	movf	_leap^0,w,c
   505  0001EA  B4D8               	btfsc	status,2,c
   506  0001EC  EFFA  F000         	goto	u581
   507  0001F0  EFFC  F000         	goto	u580
   508  0001F4                     u581:
   509  0001F4  EF0E  F001         	goto	l1207
   510  0001F8                     u580:
   511  0001F8  A015               	btfss	_leap^0,0,c
   512  0001FA  EF01  F001         	goto	u591
   513  0001FE  EF03  F001         	goto	u590
   514  000202                     u591:
   515  000202  EF4B  F000         	goto	l1163
   516  000206                     u590:
   517  000206  0E2B               	movlw	43
   518  000208  5C0F               	subwf	_day_of_year^0,w,c
   519  00020A  0E01               	movlw	1
   520  00020C  5810               	subwfb	(_day_of_year+1)^0,w,c
   521  00020E  A0D8               	btfss	status,0,c
   522  000210  EF0C  F001         	goto	u601
   523  000214  EF0E  F001         	goto	u600
   524  000218                     u601:
   525  000218  EF4B  F000         	goto	l1163
   526  00021C                     u600:
   527  00021C                     l1207:
   528                           
   529                           ;main.c: 87:                 check_dst_bwd(&hour,&day_of_week,&dst_bwd);
   530  00021C  0E16               	movlw	low _hour
   531  00021E  6E02               	movwf	check_dst_bwd@phour^0,c
   532  000220  0E00               	movlw	high _hour
   533  000222  6E03               	movwf	(check_dst_bwd@phour+1)^0,c
   534  000224  0E13               	movlw	low _day_of_week
   535  000226  6E04               	movwf	check_dst_bwd@pday_of_week^0,c
   536  000228  0E00               	movlw	high _day_of_week
   537  00022A  6E05               	movwf	(check_dst_bwd@pday_of_week+1)^0,c
   538  00022C  0E14               	movlw	low _dst_bwd
   539  00022E  6E06               	movwf	check_dst_bwd@pdst_bwd^0,c
   540  000230  0E00               	movlw	high _dst_bwd
   541  000232  6E07               	movwf	(check_dst_bwd@pdst_bwd+1)^0,c
   542  000234  EC41  F002         	call	_check_dst_bwd	;wreg free
   543  000238  EF4B  F000         	goto	l1163
   544  00023C  EF3D  F000         	goto	start
   545  000240                     __end_of_main:
   546                           	callstack 0
   547                           
   548 ;; *************** function _new_year *****************
   549 ;; Defined at:
   550 ;;		line 61 in file "dates.c"
   551 ;; Parameters:    Size  Location     Type
   552 ;;  pday_of_year    2    1[COMRAM] PTR unsigned int 
   553 ;;		 -> day_of_year(2), 
   554 ;;  pyear           2    3[COMRAM] PTR unsigned char 
   555 ;;		 -> year(1), 
   556 ;;  pleap           2    5[COMRAM] PTR unsigned char 
   557 ;;		 -> leap(1), 
   558 ;;  pdst_bwd        2    7[COMRAM] PTR unsigned char 
   559 ;;		 -> dst_bwd(1), 
   560 ;;  pdst_fwd        2    9[COMRAM] PTR unsigned char 
   561 ;;		 -> dst_fwd(1), 
   562 ;; Auto vars:     Size  Location     Type
   563 ;;		None
   564 ;; Return value:  Size  Location     Type
   565 ;;                  1    wreg      void 
   566 ;; Registers used:
   567 ;;		wreg, fsr2l, fsr2h, status,2, status,0
   568 ;; Tracked objects:
   569 ;;		On entry : 0/0
   570 ;;		On exit  : 0/0
   571 ;;		Unchanged: 0/0
   572 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   573 ;;      Params:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   574 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   575 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   576 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   577 ;;Total ram usage:       12 bytes
   578 ;; Hardware stack levels used: 1
   579 ;; Hardware stack levels required when called: 1
   580 ;; This function calls:
   581 ;;		Nothing
   582 ;; This function is called by:
   583 ;;		_main
   584 ;; This function uses a non-reentrant model
   585 ;;
   586                           
   587                           	psect	text1
   588  000240                     __ptext1:
   589                           	callstack 0
   590  000240                     _new_year:
   591                           	callstack 29
   592  000240                     
   593                           ;dates.c: 61: void new_year(unsigned int *pday_of_year, unsigned char *pyear, unsigned c
      +                          har *pleap,;dates.c: 62:     unsigned char *pdst_bwd, unsigned char *pdst_fwd);dates.c: 
      +                          63: {;dates.c: 64:     if(*pleap == 0){
   594  000240  C006  FFD9         	movff	new_year@pleap,fsr2l
   595  000244  C007  FFDA         	movff	new_year@pleap+1,fsr2h
   596  000248  50DF               	movf	indf2,w,c
   597  00024A  A4D8               	btfss	status,2,c
   598  00024C  EF2A  F001         	goto	u341
   599  000250  EF2C  F001         	goto	u340
   600  000254                     u341:
   601  000254  EF47  F001         	goto	l1109
   602  000258                     u340:
   603  000258                     
   604                           ;dates.c: 65:         *pday_of_year = 1;
   605  000258  C002  FFD9         	movff	new_year@pday_of_year,fsr2l
   606  00025C  C003  FFDA         	movff	new_year@pday_of_year+1,fsr2h
   607  000260  0E01               	movlw	1
   608  000262  6EDE               	movwf	postinc2,c
   609  000264  0E00               	movlw	0
   610  000266  6EDD               	movwf	postdec2,c
   611  000268                     
   612                           ;dates.c: 66:         (*pyear) ++;
   613  000268  C004  FFD9         	movff	new_year@pyear,fsr2l
   614  00026C  C005  FFDA         	movff	new_year@pyear+1,fsr2h
   615  000270  2ADF               	incf	indf2,f,c
   616  000272                     
   617                           ;dates.c: 67:         *pdst_fwd = 0;
   618  000272  C00A  FFD9         	movff	new_year@pdst_fwd,fsr2l
   619  000276  C00B  FFDA         	movff	new_year@pdst_fwd+1,fsr2h
   620  00027A  0E00               	movlw	0
   621  00027C  6EDF               	movwf	indf2,c
   622  00027E                     
   623                           ;dates.c: 68:         *pdst_bwd = 0;
   624  00027E  C008  FFD9         	movff	new_year@pdst_bwd,fsr2l
   625  000282  C009  FFDA         	movff	new_year@pdst_bwd+1,fsr2h
   626  000286  0E00               	movlw	0
   627  000288  6EDF               	movwf	indf2,c
   628                           
   629                           ;dates.c: 69:         if (*pyear % 4 & 0) *pleap = 1;
   630  00028A  EF80  F001         	goto	l201
   631  00028E                     l1109:
   632  00028E  C006  FFD9         	movff	new_year@pleap,fsr2l
   633  000292  C007  FFDA         	movff	new_year@pleap+1,fsr2h
   634  000296  A0DF               	btfss	indf2,0,c
   635  000298  EF50  F001         	goto	u351
   636  00029C  EF52  F001         	goto	u350
   637  0002A0                     u351:
   638  0002A0  EF80  F001         	goto	l201
   639  0002A4                     u350:
   640  0002A4                     
   641                           ;dates.c: 71:         if(*pday_of_year > 366){
   642  0002A4  C002  FFD9         	movff	new_year@pday_of_year,fsr2l
   643  0002A8  C003  FFDA         	movff	new_year@pday_of_year+1,fsr2h
   644  0002AC  0E6F               	movlw	111
   645  0002AE  5CDE               	subwf	postinc2,w,c
   646  0002B0  0E01               	movlw	1
   647  0002B2  58DE               	subwfb	postinc2,w,c
   648  0002B4  A0D8               	btfss	status,0,c
   649  0002B6  EF5F  F001         	goto	u361
   650  0002BA  EF61  F001         	goto	u360
   651  0002BE                     u361:
   652  0002BE  EF80  F001         	goto	l201
   653  0002C2                     u360:
   654  0002C2                     
   655                           ;dates.c: 72:             *pday_of_year = 1;
   656  0002C2  C002  FFD9         	movff	new_year@pday_of_year,fsr2l
   657  0002C6  C003  FFDA         	movff	new_year@pday_of_year+1,fsr2h
   658  0002CA  0E01               	movlw	1
   659  0002CC  6EDE               	movwf	postinc2,c
   660  0002CE  0E00               	movlw	0
   661  0002D0  6EDD               	movwf	postdec2,c
   662  0002D2                     
   663                           ;dates.c: 73:             (*pyear) ++;
   664  0002D2  C004  FFD9         	movff	new_year@pyear,fsr2l
   665  0002D6  C005  FFDA         	movff	new_year@pyear+1,fsr2h
   666  0002DA  2ADF               	incf	indf2,f,c
   667  0002DC                     
   668                           ;dates.c: 74:             *pdst_fwd = 0;
   669  0002DC  C00A  FFD9         	movff	new_year@pdst_fwd,fsr2l
   670  0002E0  C00B  FFDA         	movff	new_year@pdst_fwd+1,fsr2h
   671  0002E4  0E00               	movlw	0
   672  0002E6  6EDF               	movwf	indf2,c
   673  0002E8                     
   674                           ;dates.c: 75:             *pdst_bwd = 0;
   675  0002E8  C008  FFD9         	movff	new_year@pdst_bwd,fsr2l
   676  0002EC  C009  FFDA         	movff	new_year@pdst_bwd+1,fsr2h
   677  0002F0  0E00               	movlw	0
   678  0002F2  6EDF               	movwf	indf2,c
   679  0002F4                     
   680                           ;dates.c: 76:             *pleap = 0;
   681  0002F4  C006  FFD9         	movff	new_year@pleap,fsr2l
   682  0002F8  C007  FFDA         	movff	new_year@pleap+1,fsr2h
   683  0002FC  0E00               	movlw	0
   684  0002FE  6EDF               	movwf	indf2,c
   685  000300                     l201:
   686  000300  0012               	return		;funcret
   687  000302                     __end_of_new_year:
   688                           	callstack 0
   689                           
   690 ;; *************** function _new_day *****************
   691 ;; Defined at:
   692 ;;		line 37 in file "dates.c"
   693 ;; Parameters:    Size  Location     Type
   694 ;;  phour           2    1[COMRAM] PTR unsigned char 
   695 ;;		 -> hour(1), 
   696 ;;  pday_of_week    2    3[COMRAM] PTR unsigned char 
   697 ;;		 -> day_of_week(1), 
   698 ;;  pday_of_year    2    5[COMRAM] PTR unsigned int 
   699 ;;		 -> day_of_year(2), 
   700 ;; Auto vars:     Size  Location     Type
   701 ;;		None
   702 ;; Return value:  Size  Location     Type
   703 ;;                  1    wreg      void 
   704 ;; Registers used:
   705 ;;		wreg, fsr2l, fsr2h, status,2, status,0
   706 ;; Tracked objects:
   707 ;;		On entry : 0/0
   708 ;;		On exit  : 0/0
   709 ;;		Unchanged: 0/0
   710 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   711 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   712 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   713 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   714 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   715 ;;Total ram usage:        6 bytes
   716 ;; Hardware stack levels used: 1
   717 ;; Hardware stack levels required when called: 1
   718 ;; This function calls:
   719 ;;		Nothing
   720 ;; This function is called by:
   721 ;;		_main
   722 ;; This function uses a non-reentrant model
   723 ;;
   724                           
   725                           	psect	text2
   726  000386                     __ptext2:
   727                           	callstack 0
   728  000386                     _new_day:
   729                           	callstack 29
   730  000386                     
   731                           ;dates.c: 37: void new_day(unsigned char *phour, unsigned char *pday_of_week, unsigned i
      +                          nt *pday_of_year);dates.c: 38: {;dates.c: 39:     *phour = 0;
   732  000386  C002  FFD9         	movff	new_day@phour,fsr2l
   733  00038A  C003  FFDA         	movff	new_day@phour+1,fsr2h
   734  00038E  0E00               	movlw	0
   735  000390  6EDF               	movwf	indf2,c
   736  000392                     
   737                           ;dates.c: 40:     TMR1L = 0;
   738  000392  0E00               	movlw	0
   739  000394  6ECD               	movwf	205,c	;volatile
   740  000396                     
   741                           ;dates.c: 41:     (*pday_of_year)++;
   742  000396  C006  FFD9         	movff	new_day@pday_of_year,fsr2l
   743  00039A  C007  FFDA         	movff	new_day@pday_of_year+1,fsr2h
   744  00039E  2ADE               	incf	postinc2,f,c
   745  0003A0  0E00               	movlw	0
   746  0003A2  22DD               	addwfc	postdec2,f,c
   747  0003A4                     
   748                           ;dates.c: 42:     (*pday_of_week)++;
   749  0003A4  C004  FFD9         	movff	new_day@pday_of_week,fsr2l
   750  0003A8  C005  FFDA         	movff	new_day@pday_of_week+1,fsr2h
   751  0003AC  2ADF               	incf	indf2,f,c
   752  0003AE                     
   753                           ;dates.c: 43:     if(*pday_of_week & 8){
   754  0003AE  C004  FFD9         	movff	new_day@pday_of_week,fsr2l
   755  0003B2  C005  FFDA         	movff	new_day@pday_of_week+1,fsr2h
   756  0003B6  A6DF               	btfss	indf2,3,c
   757  0003B8  EFE0  F001         	goto	u321
   758  0003BC  EFE2  F001         	goto	u320
   759  0003C0                     u321:
   760  0003C0  EFF4  F001         	goto	l193
   761  0003C4                     u320:
   762  0003C4                     
   763                           ;dates.c: 44:         *pday_of_week = 1;
   764  0003C4  C004  FFD9         	movff	new_day@pday_of_week,fsr2l
   765  0003C8  C005  FFDA         	movff	new_day@pday_of_week+1,fsr2h
   766  0003CC  0E01               	movlw	1
   767  0003CE  6EDF               	movwf	indf2,c
   768  0003D0                     
   769                           ;dates.c: 45:         if(!test_mode){
   770  0003D0  500E               	movf	_test_mode^0,w,c
   771  0003D2  A4D8               	btfss	status,2,c
   772  0003D4  EFEE  F001         	goto	u331
   773  0003D8  EFF0  F001         	goto	u330
   774  0003DC                     u331:
   775  0003DC  EFF4  F001         	goto	l193
   776  0003E0                     u330:
   777  0003E0                     
   778                           ;dates.c: 48:             TMR0H = 0b00101011;
   779  0003E0  0E2B               	movlw	43
   780  0003E2  6ED4               	movwf	212,c	;volatile
   781                           
   782                           ;dates.c: 49:             TMR0L = 0b00000100;
   783  0003E4  0E04               	movlw	4
   784  0003E6  6ED3               	movwf	211,c	;volatile
   785  0003E8                     l193:
   786  0003E8  0012               	return		;funcret
   787  0003EA                     __end_of_new_day:
   788                           	callstack 0
   789                           
   790 ;; *************** function _check_dst_fwd *****************
   791 ;; Defined at:
   792 ;;		line 24 in file "dates.c"
   793 ;; Parameters:    Size  Location     Type
   794 ;;  phour           2    1[COMRAM] PTR unsigned char 
   795 ;;		 -> hour(1), 
   796 ;;  pday_of_week    2    3[COMRAM] PTR unsigned char 
   797 ;;		 -> day_of_week(1), 
   798 ;;  pdst_fwd        2    5[COMRAM] PTR unsigned char 
   799 ;;		 -> dst_fwd(1), 
   800 ;; Auto vars:     Size  Location     Type
   801 ;;		None
   802 ;; Return value:  Size  Location     Type
   803 ;;                  1    wreg      void 
   804 ;; Registers used:
   805 ;;		wreg, fsr2l, fsr2h, status,2, status,0
   806 ;; Tracked objects:
   807 ;;		On entry : 0/0
   808 ;;		On exit  : 0/0
   809 ;;		Unchanged: 0/0
   810 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   811 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   812 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   813 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   814 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   815 ;;Total ram usage:        7 bytes
   816 ;; Hardware stack levels used: 1
   817 ;; Hardware stack levels required when called: 1
   818 ;; This function calls:
   819 ;;		Nothing
   820 ;; This function is called by:
   821 ;;		_main
   822 ;; This function uses a non-reentrant model
   823 ;;
   824                           
   825                           	psect	text3
   826  00043C                     __ptext3:
   827                           	callstack 0
   828  00043C                     _check_dst_fwd:
   829                           	callstack 29
   830  00043C                     
   831                           ;dates.c: 24: void check_dst_fwd(unsigned char *phour, unsigned char *pday_of_week, unsi
      +                          gned char *pdst_fwd);dates.c: 25: {;dates.c: 26:     if((*pday_of_week == 7) && (*phour 
      +                          == 2))
   832  00043C  C004  FFD9         	movff	check_dst_fwd@pday_of_week,fsr2l
   833  000440  C005  FFDA         	movff	check_dst_fwd@pday_of_week+1,fsr2h
   834  000444  0E07               	movlw	7
   835  000446  18DE               	xorwf	postinc2,w,c
   836  000448  A4D8               	btfss	status,2,c
   837  00044A  EF29  F002         	goto	u371
   838  00044E  EF2B  F002         	goto	u370
   839  000452                     u371:
   840  000452  EF40  F002         	goto	l188
   841  000456                     u370:
   842  000456  C002  FFD9         	movff	check_dst_fwd@phour,fsr2l
   843  00045A  C003  FFDA         	movff	check_dst_fwd@phour+1,fsr2h
   844  00045E  0E02               	movlw	2
   845  000460  18DE               	xorwf	postinc2,w,c
   846  000462  A4D8               	btfss	status,2,c
   847  000464  EF36  F002         	goto	u381
   848  000468  EF38  F002         	goto	u380
   849  00046C                     u381:
   850  00046C  EF40  F002         	goto	l188
   851  000470                     u380:
   852  000470                     
   853                           ;dates.c: 27:     {;dates.c: 28:         *pdst_fwd = 1;
   854  000470  C006  FFD9         	movff	check_dst_fwd@pdst_fwd,fsr2l
   855  000474  C007  FFDA         	movff	check_dst_fwd@pdst_fwd+1,fsr2h
   856  000478  0E01               	movlw	1
   857  00047A  6EDF               	movwf	indf2,c
   858  00047C                     
   859                           ;dates.c: 29:         TMR1L = 0b00000011;
   860  00047C  0E03               	movlw	3
   861  00047E  6ECD               	movwf	205,c	;volatile
   862  000480                     l188:
   863  000480  0012               	return		;funcret
   864  000482                     __end_of_check_dst_fwd:
   865                           	callstack 0
   866                           
   867 ;; *************** function _check_dst_bwd *****************
   868 ;; Defined at:
   869 ;;		line 12 in file "dates.c"
   870 ;; Parameters:    Size  Location     Type
   871 ;;  phour           2    1[COMRAM] PTR unsigned char 
   872 ;;		 -> hour(1), 
   873 ;;  pday_of_week    2    3[COMRAM] PTR unsigned char 
   874 ;;		 -> day_of_week(1), 
   875 ;;  pdst_bwd        2    5[COMRAM] PTR unsigned char 
   876 ;;		 -> dst_bwd(1), 
   877 ;; Auto vars:     Size  Location     Type
   878 ;;		None
   879 ;; Return value:  Size  Location     Type
   880 ;;                  1    wreg      void 
   881 ;; Registers used:
   882 ;;		wreg, fsr2l, fsr2h, status,2, status,0
   883 ;; Tracked objects:
   884 ;;		On entry : 0/0
   885 ;;		On exit  : 0/0
   886 ;;		Unchanged: 0/0
   887 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   888 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   889 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   890 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   891 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   892 ;;Total ram usage:        7 bytes
   893 ;; Hardware stack levels used: 1
   894 ;; Hardware stack levels required when called: 1
   895 ;; This function calls:
   896 ;;		Nothing
   897 ;; This function is called by:
   898 ;;		_main
   899 ;; This function uses a non-reentrant model
   900 ;;
   901                           
   902                           	psect	text4
   903  000482                     __ptext4:
   904                           	callstack 0
   905  000482                     _check_dst_bwd:
   906                           	callstack 29
   907  000482                     
   908                           ;dates.c: 12: void check_dst_bwd(unsigned char *phour, unsigned char *pday_of_week,unsig
      +                          ned char *pdst_bwd);dates.c: 13: {;dates.c: 14:     if((*pday_of_week == 7) && (*phour =
      +                          = 2) ){
   909  000482  C004  FFD9         	movff	check_dst_bwd@pday_of_week,fsr2l
   910  000486  C005  FFDA         	movff	check_dst_bwd@pday_of_week+1,fsr2h
   911  00048A  0E07               	movlw	7
   912  00048C  18DE               	xorwf	postinc2,w,c
   913  00048E  A4D8               	btfss	status,2,c
   914  000490  EF4C  F002         	goto	u391
   915  000494  EF4E  F002         	goto	u390
   916  000498                     u391:
   917  000498  EF63  F002         	goto	l184
   918  00049C                     u390:
   919  00049C  C002  FFD9         	movff	check_dst_bwd@phour,fsr2l
   920  0004A0  C003  FFDA         	movff	check_dst_bwd@phour+1,fsr2h
   921  0004A4  0E02               	movlw	2
   922  0004A6  18DE               	xorwf	postinc2,w,c
   923  0004A8  A4D8               	btfss	status,2,c
   924  0004AA  EF59  F002         	goto	u401
   925  0004AE  EF5B  F002         	goto	u400
   926  0004B2                     u401:
   927  0004B2  EF63  F002         	goto	l184
   928  0004B6                     u400:
   929  0004B6                     
   930                           ;dates.c: 15:         *pdst_bwd = 1;
   931  0004B6  C006  FFD9         	movff	check_dst_bwd@pdst_bwd,fsr2l
   932  0004BA  C007  FFDA         	movff	check_dst_bwd@pdst_bwd+1,fsr2h
   933  0004BE  0E01               	movlw	1
   934  0004C0  6EDF               	movwf	indf2,c
   935  0004C2                     
   936                           ;dates.c: 16:         TMR1L = 0b00000001;
   937  0004C2  0E01               	movlw	1
   938  0004C4  6ECD               	movwf	205,c	;volatile
   939  0004C6                     l184:
   940  0004C6  0012               	return		;funcret
   941  0004C8                     __end_of_check_dst_bwd:
   942                           	callstack 0
   943                           
   944 ;; *************** function _Timer1_init *****************
   945 ;; Defined at:
   946 ;;		line 44 in file "timers.c"
   947 ;; Parameters:    Size  Location     Type
   948 ;;		None
   949 ;; Auto vars:     Size  Location     Type
   950 ;;		None
   951 ;; Return value:  Size  Location     Type
   952 ;;                  1    wreg      void 
   953 ;; Registers used:
   954 ;;		wreg, status,2
   955 ;; Tracked objects:
   956 ;;		On entry : 0/0
   957 ;;		On exit  : 0/0
   958 ;;		Unchanged: 0/0
   959 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   960 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   961 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   962 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   963 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   964 ;;Total ram usage:        0 bytes
   965 ;; Hardware stack levels used: 1
   966 ;; Hardware stack levels required when called: 1
   967 ;; This function calls:
   968 ;;		Nothing
   969 ;; This function is called by:
   970 ;;		_main
   971 ;; This function uses a non-reentrant model
   972 ;;
   973                           
   974                           	psect	text5
   975  00051E                     __ptext5:
   976                           	callstack 0
   977  00051E                     _Timer1_init:
   978                           	callstack 29
   979  00051E                     
   980                           ;timers.c: 46:     TMR1CLKbits.CS = 0b1000;
   981  00051E  50D2               	movf	210,w,c	;volatile
   982  000520  0BF0               	andlw	-16
   983  000522  0908               	iorlw	8
   984  000524  6ED2               	movwf	210,c	;volatile
   985                           
   986                           ;timers.c: 47:     T1CONbits.CKPS = 0b00;
   987  000526  0ECF               	movlw	-49
   988  000528  16CF               	andwf	207,f,c	;volatile
   989  00052A                     
   990                           ;timers.c: 48:     PIE5bits.TMR1IE = 1;
   991  00052A  010E               	movlb	14	; () banked
   992  00052C  812E               	bsf	46,0,b	;volatile
   993  00052E                     
   994                           ; BSR set to: 14
   995                           ;timers.c: 49:     IPR5bits.TMR1IP = 1;
   996  00052E  8124               	bsf	36,0,b	;volatile
   997                           
   998                           ;timers.c: 51:     TMR1H = 0;
   999  000530  0E00               	movlw	0
  1000  000532  6ECE               	movwf	206,c	;volatile
  1001  000534                     
  1002                           ; BSR set to: 14
  1003                           ;timers.c: 52:     TMR1L = hour;
  1004  000534  C016  FFCD         	movff	_hour,4045	;volatile
  1005  000538                     
  1006                           ; BSR set to: 14
  1007                           ;timers.c: 54:     T1CONbits.ON = 1;
  1008  000538  80CF               	bsf	207,0,c	;volatile
  1009  00053A                     
  1010                           ; BSR set to: 14
  1011                           ;timers.c: 55:     T1GCONbits.GE = 1;
  1012  00053A  8ED0               	bsf	208,7,c	;volatile
  1013  00053C                     
  1014                           ; BSR set to: 14
  1015  00053C  0012               	return		;funcret
  1016  00053E                     __end_of_Timer1_init:
  1017                           	callstack 0
  1018                           
  1019 ;; *************** function _Timer0_init *****************
  1020 ;; Defined at:
  1021 ;;		line 12 in file "timers.c"
  1022 ;; Parameters:    Size  Location     Type
  1023 ;;		None
  1024 ;; Auto vars:     Size  Location     Type
  1025 ;;		None
  1026 ;; Return value:  Size  Location     Type
  1027 ;;                  1    wreg      void 
  1028 ;; Registers used:
  1029 ;;		wreg, status,2
  1030 ;; Tracked objects:
  1031 ;;		On entry : 0/0
  1032 ;;		On exit  : 0/0
  1033 ;;		Unchanged: 0/0
  1034 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1035 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1036 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1037 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1038 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1039 ;;Total ram usage:        0 bytes
  1040 ;; Hardware stack levels used: 1
  1041 ;; Hardware stack levels required when called: 1
  1042 ;; This function calls:
  1043 ;;		Nothing
  1044 ;; This function is called by:
  1045 ;;		_main
  1046 ;; This function uses a non-reentrant model
  1047 ;;
  1048                           
  1049                           	psect	text6
  1050  0003EA                     __ptext6:
  1051                           	callstack 0
  1052  0003EA                     _Timer0_init:
  1053                           	callstack 29
  1054  0003EA                     
  1055                           ;timers.c: 14:     if(test_mode ){
  1056  0003EA  500E               	movf	_test_mode^0,w,c
  1057  0003EC  B4D8               	btfsc	status,2,c
  1058  0003EE  EFFB  F001         	goto	u311
  1059  0003F2  EFFD  F001         	goto	u310
  1060  0003F6                     u311:
  1061  0003F6  EF0C  F002         	goto	l1071
  1062  0003FA                     u310:
  1063  0003FA                     
  1064                           ;timers.c: 16:     T0CON1bits.T0CS=0b010;
  1065  0003FA  50D6               	movf	214,w,c	;volatile
  1066  0003FC  0B1F               	andlw	-225
  1067  0003FE  0940               	iorlw	64
  1068  000400  6ED6               	movwf	214,c	;volatile
  1069  000402                     
  1070                           ;timers.c: 17:     T0CON1bits.T0ASYNC=1;
  1071  000402  88D6               	bsf	214,4,c	;volatile
  1072                           
  1073                           ;timers.c: 18:     T0CON1bits.T0CKPS=0b1000 ;
  1074  000404  50D6               	movf	214,w,c	;volatile
  1075  000406  0BF0               	andlw	-16
  1076  000408  0908               	iorlw	8
  1077  00040A  6ED6               	movwf	214,c	;volatile
  1078                           
  1079                           ;timers.c: 19:     TMR0H = 0b00001011;
  1080  00040C  0E0B               	movlw	11
  1081  00040E  6ED4               	movwf	212,c	;volatile
  1082                           
  1083                           ;timers.c: 20:     TMR0L = 0b11011100;
  1084  000410  0EDC               	movlw	220
  1085  000412  6ED3               	movwf	211,c	;volatile
  1086                           
  1087                           ;timers.c: 21:     } else {
  1088  000414  EF18  F002         	goto	l1073
  1089  000418                     l1071:
  1090                           
  1091                           ;timers.c: 23:     T0CON1bits.T0CS=0b100;
  1092  000418  50D6               	movf	214,w,c	;volatile
  1093  00041A  0B1F               	andlw	-225
  1094  00041C  0980               	iorlw	128
  1095  00041E  6ED6               	movwf	214,c	;volatile
  1096                           
  1097                           ;timers.c: 24:     T0CON1bits.T0CKPS=0b1011 ;
  1098  000420  50D6               	movf	214,w,c	;volatile
  1099  000422  0BF0               	andlw	-16
  1100  000424  090B               	iorlw	11
  1101  000426  6ED6               	movwf	214,c	;volatile
  1102                           
  1103                           ;timers.c: 29:     TMR0H = 0b00101011;
  1104  000428  0E2B               	movlw	43
  1105  00042A  6ED4               	movwf	212,c	;volatile
  1106                           
  1107                           ;timers.c: 30:     TMR0L = 0b00100100;
  1108  00042C  0E24               	movlw	36
  1109  00042E  6ED3               	movwf	211,c	;volatile
  1110  000430                     l1073:
  1111                           
  1112                           ;timers.c: 33:     T0CON0bits.T016BIT=1;
  1113  000430  88D5               	bsf	213,4,c	;volatile
  1114  000432                     
  1115                           ;timers.c: 34:     PIE0bits.TMR0IE = 1;
  1116  000432  010E               	movlb	14	; () banked
  1117  000434  8B29               	bsf	41,5,b	;volatile
  1118  000436                     
  1119                           ; BSR set to: 14
  1120                           ;timers.c: 35:     IPR0bits.TMR0IP = 1;
  1121  000436  8B1F               	bsf	31,5,b	;volatile
  1122  000438                     
  1123                           ; BSR set to: 14
  1124                           ;timers.c: 36:     T0CON0bits.T0EN=1;
  1125  000438  8ED5               	bsf	213,7,c	;volatile
  1126  00043A                     
  1127                           ; BSR set to: 14
  1128  00043A  0012               	return		;funcret
  1129  00043C                     __end_of_Timer0_init:
  1130                           	callstack 0
  1131                           
  1132 ;; *************** function _LEDarray_init *****************
  1133 ;; Defined at:
  1134 ;;		line 7 in file "LEDarray.c"
  1135 ;; Parameters:    Size  Location     Type
  1136 ;;		None
  1137 ;; Auto vars:     Size  Location     Type
  1138 ;;		None
  1139 ;; Return value:  Size  Location     Type
  1140 ;;                  1    wreg      void 
  1141 ;; Registers used:
  1142 ;;		None
  1143 ;; Tracked objects:
  1144 ;;		On entry : 0/0
  1145 ;;		On exit  : 0/0
  1146 ;;		Unchanged: 0/0
  1147 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1148 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1149 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1150 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1151 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1152 ;;Total ram usage:        0 bytes
  1153 ;; Hardware stack levels used: 1
  1154 ;; Hardware stack levels required when called: 1
  1155 ;; This function calls:
  1156 ;;		Nothing
  1157 ;; This function is called by:
  1158 ;;		_main
  1159 ;; This function uses a non-reentrant model
  1160 ;;
  1161                           
  1162                           	psect	text7
  1163  00053E                     __ptext7:
  1164                           	callstack 0
  1165  00053E                     _LEDarray_init:
  1166                           	callstack 29
  1167  00053E                     
  1168                           ;LEDarray.c: 11:     TRISAbits.TRISA4 = 0;
  1169  00053E  9881               	bcf	129,4,c	;volatile
  1170                           
  1171                           ;LEDarray.c: 12:     TRISAbits.TRISA5 = 0;
  1172  000540  9A81               	bcf	129,5,c	;volatile
  1173                           
  1174                           ;LEDarray.c: 13:     TRISFbits.TRISF0 = 0;
  1175  000542  9086               	bcf	134,0,c	;volatile
  1176                           
  1177                           ;LEDarray.c: 14:     TRISBbits.TRISB0 = 0;
  1178  000544  9082               	bcf	130,0,c	;volatile
  1179                           
  1180                           ;LEDarray.c: 15:     TRISBbits.TRISB1 = 0;
  1181  000546  9282               	bcf	130,1,c	;volatile
  1182                           
  1183                           ;LEDarray.c: 16:     LATAbits.LATA4 = 0;
  1184  000548  9879               	bcf	121,4,c	;volatile
  1185                           
  1186                           ;LEDarray.c: 17:     LATAbits.LATA5 = 0;
  1187  00054A  9A79               	bcf	121,5,c	;volatile
  1188                           
  1189                           ;LEDarray.c: 18:     LATFbits.LATF0 = 0;
  1190  00054C  907E               	bcf	126,0,c	;volatile
  1191                           
  1192                           ;LEDarray.c: 19:     LATBbits.LATB0 = 0;
  1193  00054E  907A               	bcf	122,0,c	;volatile
  1194                           
  1195                           ;LEDarray.c: 20:     LATBbits.LATB1 = 0;
  1196  000550  927A               	bcf	122,1,c	;volatile
  1197  000552  0012               	return		;funcret
  1198  000554                     __end_of_LEDarray_init:
  1199                           	callstack 0
  1200                           
  1201 ;; *************** function _LEDarray_disp_bin *****************
  1202 ;; Defined at:
  1203 ;;		line 26 in file "LEDarray.c"
  1204 ;; Parameters:    Size  Location     Type
  1205 ;;  number          1    wreg     unsigned char 
  1206 ;; Auto vars:     Size  Location     Type
  1207 ;;  number          1    2[COMRAM] unsigned char 
  1208 ;; Return value:  Size  Location     Type
  1209 ;;                  1    wreg      void 
  1210 ;; Registers used:
  1211 ;;		wreg, status,2, status,0
  1212 ;; Tracked objects:
  1213 ;;		On entry : 0/0
  1214 ;;		On exit  : 0/0
  1215 ;;		Unchanged: 0/0
  1216 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1217 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1218 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1219 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1220 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1221 ;;Total ram usage:        2 bytes
  1222 ;; Hardware stack levels used: 1
  1223 ;; Hardware stack levels required when called: 1
  1224 ;; This function calls:
  1225 ;;		Nothing
  1226 ;; This function is called by:
  1227 ;;		_main
  1228 ;; This function uses a non-reentrant model
  1229 ;;
  1230                           
  1231                           	psect	text8
  1232  000302                     __ptext8:
  1233                           	callstack 0
  1234  000302                     _LEDarray_disp_bin:
  1235                           	callstack 29
  1236                           
  1237                           ;incstack = 0
  1238                           ;LEDarray_disp_bin@number stored from wreg
  1239  000302  6E03               	movwf	LEDarray_disp_bin@number^0,c
  1240  000304                     
  1241                           ;LEDarray.c: 26: void LEDarray_disp_bin(unsigned char number);LEDarray.c: 27: {;LEDarray
      +                          .c: 29:     LATAbits.LATA4 = (number & 0b000010000) >> 4;
  1242  000304  C003  F002         	movff	LEDarray_disp_bin@number,??_LEDarray_disp_bin
  1243  000308  3A02               	swapf	??_LEDarray_disp_bin^0,f,c
  1244  00030A  0E0F               	movlw	15
  1245  00030C  1602               	andwf	??_LEDarray_disp_bin^0,f,c
  1246  00030E  0E01               	movlw	1
  1247  000310  1602               	andwf	??_LEDarray_disp_bin^0,f,c
  1248  000312  3A02               	swapf	??_LEDarray_disp_bin^0,f,c
  1249  000314  5079               	movf	121,w,c	;volatile
  1250  000316  1802               	xorwf	??_LEDarray_disp_bin^0,w,c
  1251  000318  0BEF               	andlw	-17
  1252  00031A  1802               	xorwf	??_LEDarray_disp_bin^0,w,c
  1253  00031C  6E79               	movwf	121,c	;volatile
  1254                           
  1255                           ;LEDarray.c: 30:     LATAbits.LATA5 = (number & 0b000001000) >> 3;
  1256  00031E  C003  F002         	movff	LEDarray_disp_bin@number,??_LEDarray_disp_bin
  1257  000322  90D8               	bcf	status,0,c
  1258  000324  3202               	rrcf	??_LEDarray_disp_bin^0,f,c
  1259  000326  90D8               	bcf	status,0,c
  1260  000328  3202               	rrcf	??_LEDarray_disp_bin^0,f,c
  1261  00032A  90D8               	bcf	status,0,c
  1262  00032C  3202               	rrcf	??_LEDarray_disp_bin^0,f,c
  1263  00032E  0E01               	movlw	1
  1264  000330  1602               	andwf	??_LEDarray_disp_bin^0,f,c
  1265  000332  3A02               	swapf	??_LEDarray_disp_bin^0,f,c
  1266  000334  4602               	rlncf	??_LEDarray_disp_bin^0,f,c
  1267  000336  5079               	movf	121,w,c	;volatile
  1268  000338  1802               	xorwf	??_LEDarray_disp_bin^0,w,c
  1269  00033A  0BDF               	andlw	-33
  1270  00033C  1802               	xorwf	??_LEDarray_disp_bin^0,w,c
  1271  00033E  6E79               	movwf	121,c	;volatile
  1272                           
  1273                           ;LEDarray.c: 31:     LATFbits.LATF0 = (number & 0b000000100) >> 2;
  1274  000340  C003  F002         	movff	LEDarray_disp_bin@number,??_LEDarray_disp_bin
  1275  000344  90D8               	bcf	status,0,c
  1276  000346  3202               	rrcf	??_LEDarray_disp_bin^0,f,c
  1277  000348  90D8               	bcf	status,0,c
  1278  00034A  3202               	rrcf	??_LEDarray_disp_bin^0,f,c
  1279  00034C  0E01               	movlw	1
  1280  00034E  1602               	andwf	??_LEDarray_disp_bin^0,f,c
  1281  000350  507E               	movf	126,w,c	;volatile
  1282  000352  1802               	xorwf	??_LEDarray_disp_bin^0,w,c
  1283  000354  0BFE               	andlw	-2
  1284  000356  1802               	xorwf	??_LEDarray_disp_bin^0,w,c
  1285  000358  6E7E               	movwf	126,c	;volatile
  1286                           
  1287                           ;LEDarray.c: 32:     LATBbits.LATB0 = (number & 0b000000010) >> 1;
  1288  00035A  C003  F002         	movff	LEDarray_disp_bin@number,??_LEDarray_disp_bin
  1289  00035E  90D8               	bcf	status,0,c
  1290  000360  3202               	rrcf	??_LEDarray_disp_bin^0,f,c
  1291  000362  0E01               	movlw	1
  1292  000364  1602               	andwf	??_LEDarray_disp_bin^0,f,c
  1293  000366  507A               	movf	122,w,c	;volatile
  1294  000368  1802               	xorwf	??_LEDarray_disp_bin^0,w,c
  1295  00036A  0BFE               	andlw	-2
  1296  00036C  1802               	xorwf	??_LEDarray_disp_bin^0,w,c
  1297  00036E  6E7A               	movwf	122,c	;volatile
  1298                           
  1299                           ;LEDarray.c: 33:     LATBbits.LATB1 = (number & 0b000000001) >> 0;
  1300  000370  C003  F002         	movff	LEDarray_disp_bin@number,??_LEDarray_disp_bin
  1301  000374  0E01               	movlw	1
  1302  000376  1602               	andwf	??_LEDarray_disp_bin^0,f,c
  1303  000378  4602               	rlncf	??_LEDarray_disp_bin^0,f,c
  1304  00037A  507A               	movf	122,w,c	;volatile
  1305  00037C  1802               	xorwf	??_LEDarray_disp_bin^0,w,c
  1306  00037E  0BFD               	andlw	-3
  1307  000380  1802               	xorwf	??_LEDarray_disp_bin^0,w,c
  1308  000382  6E7A               	movwf	122,c	;volatile
  1309  000384  0012               	return		;funcret
  1310  000386                     __end_of_LEDarray_disp_bin:
  1311                           	callstack 0
  1312                           
  1313 ;; *************** function _Interrupts_init *****************
  1314 ;; Defined at:
  1315 ;;		line 10 in file "interrupts.c"
  1316 ;; Parameters:    Size  Location     Type
  1317 ;;		None
  1318 ;; Auto vars:     Size  Location     Type
  1319 ;;		None
  1320 ;; Return value:  Size  Location     Type
  1321 ;;                  1    wreg      void 
  1322 ;; Registers used:
  1323 ;;		None
  1324 ;; Tracked objects:
  1325 ;;		On entry : 0/0
  1326 ;;		On exit  : 0/0
  1327 ;;		Unchanged: 0/0
  1328 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1329 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1330 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1331 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1332 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1333 ;;Total ram usage:        0 bytes
  1334 ;; Hardware stack levels used: 1
  1335 ;; Hardware stack levels required when called: 1
  1336 ;; This function calls:
  1337 ;;		Nothing
  1338 ;; This function is called by:
  1339 ;;		_main
  1340 ;; This function uses a non-reentrant model
  1341 ;;
  1342                           
  1343                           	psect	text9
  1344  000568                     __ptext9:
  1345                           	callstack 0
  1346  000568                     _Interrupts_init:
  1347                           	callstack 29
  1348  000568                     
  1349                           ;interrupts.c: 13:     PIE2bits.C1IE = 1;
  1350  000568  010E               	movlb	14	; () banked
  1351  00056A  812B               	bsf	43,0,b	;volatile
  1352                           
  1353                           ;interrupts.c: 14:     INTCONbits.PEIE = 1;
  1354  00056C  8CF2               	bsf	242,6,c	;volatile
  1355                           
  1356                           ;interrupts.c: 15:     INTCONbits.GIE = 1;
  1357  00056E  8EF2               	bsf	242,7,c	;volatile
  1358  000570                     
  1359                           ; BSR set to: 14
  1360  000570  0012               	return		;funcret
  1361  000572                     __end_of_Interrupts_init:
  1362                           	callstack 0
  1363                           
  1364 ;; *************** function _Comp1_init *****************
  1365 ;; Defined at:
  1366 ;;		line 26 in file "comparator.c"
  1367 ;; Parameters:    Size  Location     Type
  1368 ;;		None
  1369 ;; Auto vars:     Size  Location     Type
  1370 ;;		None
  1371 ;; Return value:  Size  Location     Type
  1372 ;;                  1    wreg      void 
  1373 ;; Registers used:
  1374 ;;		wreg, status,2, cstack
  1375 ;; Tracked objects:
  1376 ;;		On entry : 0/0
  1377 ;;		On exit  : 0/0
  1378 ;;		Unchanged: 0/0
  1379 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1380 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1381 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1382 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1383 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1384 ;;Total ram usage:        0 bytes
  1385 ;; Hardware stack levels used: 1
  1386 ;; Hardware stack levels required when called: 2
  1387 ;; This function calls:
  1388 ;;		_DAC_init
  1389 ;; This function is called by:
  1390 ;;		_main
  1391 ;; This function uses a non-reentrant model
  1392 ;;
  1393                           
  1394                           	psect	text10
  1395  0004F8                     __ptext10:
  1396                           	callstack 0
  1397  0004F8                     _Comp1_init:
  1398                           	callstack 28
  1399  0004F8                     
  1400                           ;comparator.c: 28:     TRISFbits.TRISF7=1;
  1401  0004F8  8E86               	bsf	134,7,c	;volatile
  1402  0004FA                     
  1403                           ;comparator.c: 29:     CM1NCHbits.NCH=0b011;
  1404  0004FA  010E               	movlb	14	; () banked
  1405  0004FC  51D2               	movf	210,w,b	;volatile
  1406  0004FE  0BF8               	andlw	-8
  1407  000500  0903               	iorlw	3
  1408  000502  6FD2               	movwf	210,b	;volatile
  1409                           
  1410                           ;comparator.c: 30:     CM1PCHbits.PCH=0b101;
  1411  000504  51D3               	movf	211,w,b	;volatile
  1412  000506  0BF8               	andlw	-8
  1413  000508  0905               	iorlw	5
  1414  00050A  6FD3               	movwf	211,b	;volatile
  1415  00050C                     
  1416                           ; BSR set to: 14
  1417                           ;comparator.c: 31:     CM1CON0bits.HYS=1;
  1418  00050C  83D0               	bsf	208,1,b	;volatile
  1419  00050E                     
  1420                           ; BSR set to: 14
  1421                           ;comparator.c: 32:     CM1CON0bits.POL=1;
  1422  00050E  89D0               	bsf	208,4,b	;volatile
  1423  000510                     
  1424                           ; BSR set to: 14
  1425                           ;comparator.c: 33:     CM1CON1bits.INTP=1;
  1426  000510  83D1               	bsf	209,1,b	;volatile
  1427  000512                     
  1428                           ; BSR set to: 14
  1429                           ;comparator.c: 34:     CM1CON1bits.INTN=1;
  1430  000512  81D1               	bsf	209,0,b	;volatile
  1431  000514                     
  1432                           ; BSR set to: 14
  1433                           ;comparator.c: 35:     DAC_init();
  1434  000514  ECAA  F002         	call	_DAC_init	;wreg free
  1435  000518                     
  1436                           ;comparator.c: 36:     CM1CON0bits.EN=1;
  1437  000518  010E               	movlb	14	; () banked
  1438  00051A  8FD0               	bsf	208,7,b	;volatile
  1439  00051C                     
  1440                           ; BSR set to: 14
  1441  00051C  0012               	return		;funcret
  1442  00051E                     __end_of_Comp1_init:
  1443                           	callstack 0
  1444                           
  1445 ;; *************** function _DAC_init *****************
  1446 ;; Defined at:
  1447 ;;		line 10 in file "comparator.c"
  1448 ;; Parameters:    Size  Location     Type
  1449 ;;		None
  1450 ;; Auto vars:     Size  Location     Type
  1451 ;;		None
  1452 ;; Return value:  Size  Location     Type
  1453 ;;                  1    wreg      void 
  1454 ;; Registers used:
  1455 ;;		wreg, status,2
  1456 ;; Tracked objects:
  1457 ;;		On entry : 0/0
  1458 ;;		On exit  : 0/0
  1459 ;;		Unchanged: 0/0
  1460 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1461 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1462 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1463 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1464 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1465 ;;Total ram usage:        0 bytes
  1466 ;; Hardware stack levels used: 1
  1467 ;; Hardware stack levels required when called: 1
  1468 ;; This function calls:
  1469 ;;		Nothing
  1470 ;; This function is called by:
  1471 ;;		_Comp1_init
  1472 ;; This function uses a non-reentrant model
  1473 ;;
  1474                           
  1475                           	psect	text11
  1476  000554                     __ptext11:
  1477                           	callstack 0
  1478  000554                     _DAC_init:
  1479                           	callstack 28
  1480  000554                     
  1481                           ;comparator.c: 12:     DAC1CON0bits.PSS=0b00;
  1482  000554  0EF3               	movlw	-13
  1483  000556  010E               	movlb	14	; () banked
  1484  000558  17C6               	andwf	198,f,b	;volatile
  1485  00055A                     
  1486                           ; BSR set to: 14
  1487                           ;comparator.c: 13:     DAC1CON0bits.NSS=0b0;
  1488  00055A  91C6               	bcf	198,0,b	;volatile
  1489                           
  1490                           ;comparator.c: 17:     DAC1CON1bits.DAC1R=0b01001;
  1491  00055C  51C7               	movf	199,w,b	;volatile
  1492  00055E  0BE0               	andlw	-32
  1493  000560  0909               	iorlw	9
  1494  000562  6FC7               	movwf	199,b	;volatile
  1495  000564                     
  1496                           ; BSR set to: 14
  1497                           ;comparator.c: 18:     DAC1CON0bits.DAC1EN=1;
  1498  000564  8FC6               	bsf	198,7,b	;volatile
  1499  000566                     
  1500                           ; BSR set to: 14
  1501  000566  0012               	return		;funcret
  1502  000568                     __end_of_DAC_init:
  1503                           	callstack 0
  1504                           
  1505 ;; *************** function _HighISR *****************
  1506 ;; Defined at:
  1507 ;;		line 26 in file "interrupts.c"
  1508 ;; Parameters:    Size  Location     Type
  1509 ;;		None
  1510 ;; Auto vars:     Size  Location     Type
  1511 ;;		None
  1512 ;; Return value:  Size  Location     Type
  1513 ;;                  1    wreg      void 
  1514 ;; Registers used:
  1515 ;;		wreg, status,2, status,0
  1516 ;; Tracked objects:
  1517 ;;		On entry : 0/0
  1518 ;;		On exit  : 0/0
  1519 ;;		Unchanged: 0/0
  1520 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1521 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1522 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1523 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1524 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1525 ;;Total ram usage:        1 bytes
  1526 ;; Hardware stack levels used: 1
  1527 ;; This function calls:
  1528 ;;		Nothing
  1529 ;; This function is called by:
  1530 ;;		Interrupt level 2
  1531 ;; This function uses a non-reentrant model
  1532 ;;
  1533                           
  1534                           	psect	intcode
  1535  000008                     __pintcode:
  1536                           	callstack 0
  1537  000008                     _HighISR:
  1538                           	callstack 28
  1539                           
  1540                           ; BSR set to: 14
  1541                           ;incstack = 0
  1542  000008  8217               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  1543  00000A                     
  1544                           ;interrupts.c: 28:     if(PIR0bits.TMR0IF == 1) {
  1545  00000A  010E               	movlb	14	; () banked
  1546  00000C  AB33               	btfss	51,5,b	;volatile
  1547  00000E  EF0B  F000         	goto	i2u41_41
  1548  000012  EF0D  F000         	goto	i2u41_40
  1549  000016                     i2u41_41:
  1550  000016  EF20  F000         	goto	i2l1149
  1551  00001A                     i2u41_40:
  1552  00001A                     
  1553                           ; BSR set to: 14
  1554                           ;interrupts.c: 29:         if(test_mode){
  1555  00001A  500E               	movf	_test_mode^0,w,c
  1556  00001C  B4D8               	btfsc	status,2,c
  1557  00001E  EF13  F000         	goto	i2u42_41
  1558  000022  EF15  F000         	goto	i2u42_40
  1559  000026                     i2u42_41:
  1560  000026  EF1B  F000         	goto	i2l1145
  1561  00002A                     i2u42_40:
  1562  00002A                     
  1563                           ; BSR set to: 14
  1564                           ;interrupts.c: 32:             TMR0H = 0b00001011;
  1565  00002A  0E0B               	movlw	11
  1566  00002C  6ED4               	movwf	212,c	;volatile
  1567                           
  1568                           ;interrupts.c: 33:             TMR0L = 0b11011100;
  1569  00002E  0EDC               	movlw	220
  1570  000030  6ED3               	movwf	211,c	;volatile
  1571                           
  1572                           ;interrupts.c: 34:         } else {
  1573  000032  EF1F  F000         	goto	i2l1147
  1574  000036                     i2l1145:
  1575                           
  1576                           ; BSR set to: 14
  1577                           ;interrupts.c: 36:             TMR0H = 0b00101011;
  1578  000036  0E2B               	movlw	43
  1579  000038  6ED4               	movwf	212,c	;volatile
  1580                           
  1581                           ;interrupts.c: 37:             TMR0L = 0b00100011;
  1582  00003A  0E23               	movlw	35
  1583  00003C  6ED3               	movwf	211,c	;volatile
  1584  00003E                     i2l1147:
  1585                           
  1586                           ; BSR set to: 14
  1587                           ;interrupts.c: 39:          PIR0bits.TMR0IF = 0;
  1588  00003E  9B33               	bcf	51,5,b	;volatile
  1589  000040                     i2l1149:
  1590                           
  1591                           ; BSR set to: 14
  1592                           ;interrupts.c: 41:    if(PIR2bits.C1IF == 1) {
  1593  000040  A135               	btfss	53,0,b	;volatile
  1594  000042  EF25  F000         	goto	i2u43_41
  1595  000046  EF27  F000         	goto	i2u43_40
  1596  00004A                     i2u43_41:
  1597  00004A  EF3B  F000         	goto	i2l66
  1598  00004E                     i2u43_40:
  1599  00004E                     
  1600                           ; BSR set to: 14
  1601                           ;interrupts.c: 43:         LATHbits.LATH3 = !LATHbits.LATH3;
  1602  00004E  A680               	btfss	128,3,c	;volatile
  1603  000050  EF2C  F000         	goto	i2u44_41
  1604  000054  EF30  F000         	goto	i2u44_40
  1605  000058                     i2u44_41:
  1606  000058  6A01               	clrf	??_HighISR^0,c
  1607  00005A  2A01               	incf	??_HighISR^0,f,c
  1608  00005C  EF31  F000         	goto	i2u45_48
  1609  000060                     i2u44_40:
  1610  000060  6A01               	clrf	??_HighISR^0,c
  1611  000062                     i2u45_48:
  1612  000062  4601               	rlncf	??_HighISR^0,f,c
  1613  000064  4601               	rlncf	??_HighISR^0,f,c
  1614  000066  4601               	rlncf	??_HighISR^0,f,c
  1615  000068  5080               	movf	128,w,c	;volatile
  1616  00006A  1801               	xorwf	??_HighISR^0,w,c
  1617  00006C  0BF7               	andlw	-9
  1618  00006E  1801               	xorwf	??_HighISR^0,w,c
  1619  000070  6E80               	movwf	128,c	;volatile
  1620  000072                     
  1621                           ;interrupts.c: 44:         PIR2bits.C1IF = 0;
  1622  000072  010E               	movlb	14	; () banked
  1623  000074  9135               	bcf	53,0,b	;volatile
  1624  000076                     i2l66:
  1625                           
  1626                           ; BSR set to: 14
  1627  000076  9217               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  1628  000078  0011               	retfie		f
  1629  00007A                     __end_of_HighISR:
  1630                           	callstack 0
  1631  0000                     
  1632                           	psect	rparam
  1633  0000                     
  1634                           	psect	temp
  1635  000017                     btemp:
  1636                           	callstack 0
  1637  000017                     	ds	1
  1638  0000                     int$flags	set	btemp
  1639  0000                     wtemp8	set	btemp+1
  1640  0000                     ttemp5	set	btemp+1
  1641  0000                     ttemp6	set	btemp+4
  1642  0000                     ttemp7	set	btemp+8
  1643                           
  1644                           	psect	idloc
  1645                           
  1646                           ;Config register IDLOC0 @ 0x200000
  1647                           ;	unspecified, using default values
  1648  200000                     	org	2097152
  1649  200000  0FFF               	dw	4095
  1650                           
  1651                           ;Config register IDLOC1 @ 0x200002
  1652                           ;	unspecified, using default values
  1653  200002                     	org	2097154
  1654  200002  0FFF               	dw	4095
  1655                           
  1656                           ;Config register IDLOC2 @ 0x200004
  1657                           ;	unspecified, using default values
  1658  200004                     	org	2097156
  1659  200004  0FFF               	dw	4095
  1660                           
  1661                           ;Config register IDLOC3 @ 0x200006
  1662                           ;	unspecified, using default values
  1663  200006                     	org	2097158
  1664  200006  0FFF               	dw	4095
  1665                           
  1666                           ;Config register IDLOC4 @ 0x200008
  1667                           ;	unspecified, using default values
  1668  200008                     	org	2097160
  1669  200008  0FFF               	dw	4095
  1670                           
  1671                           ;Config register IDLOC5 @ 0x20000A
  1672                           ;	unspecified, using default values
  1673  20000A                     	org	2097162
  1674  20000A  0FFF               	dw	4095
  1675                           
  1676                           ;Config register IDLOC6 @ 0x20000C
  1677                           ;	unspecified, using default values
  1678  20000C                     	org	2097164
  1679  20000C  0FFF               	dw	4095
  1680                           
  1681                           ;Config register IDLOC7 @ 0x20000E
  1682                           ;	unspecified, using default values
  1683  20000E                     	org	2097166
  1684  20000E  0FFF               	dw	4095
  1685                           
  1686                           	psect	config
  1687                           
  1688                           ;Config register CONFIG1L @ 0x300000
  1689                           ;	External Oscillator mode Selection bits
  1690                           ;	FEXTOSC = HS, HS (crystal oscillator) above 8 MHz; PFM set to high power
  1691                           ;	Power-up default value for COSC bits
  1692                           ;	RSTOSC = EXTOSC_4PLL, EXTOSC with 4x PLL, with EXTOSC operating per FEXTOSC bits
  1693  300000                     	org	3145728
  1694  300000  AA                 	db	170
  1695                           
  1696                           ;Config register CONFIG1H @ 0x300001
  1697                           ;	unspecified, using default values
  1698                           ;	Clock Out Enable bit
  1699                           ;	CLKOUTEN = 0x1, unprogrammed default
  1700                           ;	Clock Switch Enable bit
  1701                           ;	CSWEN = 0x1, unprogrammed default
  1702                           ;	Fail-Safe Clock Monitor Enable bit
  1703                           ;	FCMEN = 0x1, unprogrammed default
  1704  300001                     	org	3145729
  1705  300001  FF                 	db	255
  1706                           
  1707                           ;Config register CONFIG2L @ 0x300002
  1708                           ;	unspecified, using default values
  1709                           ;	Master Clear Enable bit
  1710                           ;	MCLRE = 0x1, unprogrammed default
  1711                           ;	Power-up Timer Enable bit
  1712                           ;	PWRTE = 0x1, unprogrammed default
  1713                           ;	Low-power BOR enable bit
  1714                           ;	LPBOREN = 0x1, unprogrammed default
  1715                           ;	Brown-out Reset Enable bits
  1716                           ;	BOREN = 0x3, unprogrammed default
  1717  300002                     	org	3145730
  1718  300002  FF                 	db	255
  1719                           
  1720                           ;Config register CONFIG2H @ 0x300003
  1721                           ;	unspecified, using default values
  1722                           ;	Brown Out Reset Voltage selection bits
  1723                           ;	BORV = 0x3, unprogrammed default
  1724                           ;	ZCD Disable bit
  1725                           ;	ZCD = 0x1, unprogrammed default
  1726                           ;	PPSLOCK bit One-Way Set Enable bit
  1727                           ;	PPS1WAY = 0x1, unprogrammed default
  1728                           ;	Stack Full/Underflow Reset Enable bit
  1729                           ;	STVREN = 0x1, unprogrammed default
  1730                           ;	Debugger Enable bit
  1731                           ;	DEBUG = 0x1, unprogrammed default
  1732                           ;	Extended Instruction Set Enable bit
  1733                           ;	XINST = 0x1, unprogrammed default
  1734  300003                     	org	3145731
  1735  300003  FF                 	db	255
  1736                           
  1737                           ;Config register CONFIG3L @ 0x300004
  1738                           ;	WDT Period Select bits
  1739                           ;	WDTCPS = 0x1F, unprogrammed default
  1740                           ;	WDT operating mode
  1741                           ;	WDTE = OFF, WDT Disabled
  1742  300004                     	org	3145732
  1743  300004  9F                 	db	159
  1744                           
  1745                           ;Config register CONFIG3H @ 0x300005
  1746                           ;	unspecified, using default values
  1747                           ;	WDT Window Select bits
  1748                           ;	WDTCWS = 0x7, unprogrammed default
  1749                           ;	WDT input clock selector
  1750                           ;	WDTCCS = 0x7, unprogrammed default
  1751  300005                     	org	3145733
  1752  300005  FF                 	db	255
  1753                           
  1754                           ;Config register CONFIG4L @ 0x300006
  1755                           ;	unspecified, using default values
  1756                           ;	Write Protection Block 0
  1757                           ;	WRT0 = 0x1, unprogrammed default
  1758                           ;	Write Protection Block 1
  1759                           ;	WRT1 = 0x1, unprogrammed default
  1760                           ;	Write Protection Block 2
  1761                           ;	WRT2 = 0x1, unprogrammed default
  1762                           ;	Write Protection Block 3
  1763                           ;	WRT3 = 0x1, unprogrammed default
  1764                           ;	Write Protection Block 3
  1765                           ;	WRT4 = 0x1, unprogrammed default
  1766                           ;	Write Protection Block 3
  1767                           ;	WRT5 = 0x1, unprogrammed default
  1768                           ;	Write Protection Block 3
  1769                           ;	WRT6 = 0x1, unprogrammed default
  1770                           ;	Write Protection Block 3
  1771                           ;	WRT7 = 0x1, unprogrammed default
  1772  300006                     	org	3145734
  1773  300006  FF                 	db	255
  1774                           
  1775                           ;Config register CONFIG4H @ 0x300007
  1776                           ;	unspecified, using default values
  1777                           ;	Configuration Register Write Protection bit
  1778                           ;	WRTC = 0x1, unprogrammed default
  1779                           ;	Boot Block Write Protection bit
  1780                           ;	WRTB = 0x1, unprogrammed default
  1781                           ;	Data EEPROM Write Protection bit
  1782                           ;	WRTD = 0x1, unprogrammed default
  1783                           ;	Scanner Enable bit
  1784                           ;	SCANE = 0x1, unprogrammed default
  1785                           ;	Low Voltage Programming Enable bit
  1786                           ;	LVP = 0x1, unprogrammed default
  1787  300007                     	org	3145735
  1788  300007  FF                 	db	255
  1789                           
  1790                           ;Config register CONFIG5L @ 0x300008
  1791                           ;	unspecified, using default values
  1792                           ;	UserNVM Program Memory Code Protection bit
  1793                           ;	CP = 0x1, unprogrammed default
  1794                           ;	DataNVM Memory Code Protection bit
  1795                           ;	CPD = 0x1, unprogrammed default
  1796  300008                     	org	3145736
  1797  300008  FF                 	db	255
  1798                           
  1799                           ;Config register CONFIG5H @ 0x300009
  1800                           ;	unspecified, using default values
  1801  300009                     	org	3145737
  1802  300009  FF                 	db	255
  1803                           
  1804                           ;Config register CONFIG6L @ 0x30000A
  1805                           ;	unspecified, using default values
  1806                           ;	Table Read Protection Block 0
  1807                           ;	EBTR0 = 0x1, unprogrammed default
  1808                           ;	Table Read Protection Block 1
  1809                           ;	EBTR1 = 0x1, unprogrammed default
  1810                           ;	Table Read Protection Block 2
  1811                           ;	EBTR2 = 0x1, unprogrammed default
  1812                           ;	Table Read Protection Block 3
  1813                           ;	EBTR3 = 0x1, unprogrammed default
  1814                           ;	Table Read Protection Block 4
  1815                           ;	EBTR4 = 0x1, unprogrammed default
  1816                           ;	Table Read Protection Block 5
  1817                           ;	EBTR5 = 0x1, unprogrammed default
  1818                           ;	Table Read Protection Block 6
  1819                           ;	EBTR6 = 0x1, unprogrammed default
  1820                           ;	Table Read Protection Block 7
  1821                           ;	EBTR7 = 0x1, unprogrammed default
  1822  30000A                     	org	3145738
  1823  30000A  FF                 	db	255
  1824                           
  1825                           ;Config register CONFIG6H @ 0x30000B
  1826                           ;	unspecified, using default values
  1827                           ;	Boot Block Table Read Protection bit
  1828                           ;	EBTRB = 0x1, unprogrammed default
  1829  30000B                     	org	3145739
  1830  30000B  FF                 	db	255
  1831                           tosu	equ	0xFFF
  1832                           tosh	equ	0xFFE
  1833                           tosl	equ	0xFFD
  1834                           stkptr	equ	0xFFC
  1835                           pclatu	equ	0xFFB
  1836                           pclath	equ	0xFFA
  1837                           pcl	equ	0xFF9
  1838                           tblptru	equ	0xFF8
  1839                           tblptrh	equ	0xFF7
  1840                           tblptrl	equ	0xFF6
  1841                           tablat	equ	0xFF5
  1842                           prodh	equ	0xFF4
  1843                           prodl	equ	0xFF3
  1844                           indf0	equ	0xFEF
  1845                           postinc0	equ	0xFEE
  1846                           postdec0	equ	0xFED
  1847                           preinc0	equ	0xFEC
  1848                           plusw0	equ	0xFEB
  1849                           fsr0h	equ	0xFEA
  1850                           fsr0l	equ	0xFE9
  1851                           wreg	equ	0xFE8
  1852                           indf1	equ	0xFE7
  1853                           postinc1	equ	0xFE6
  1854                           postdec1	equ	0xFE5
  1855                           preinc1	equ	0xFE4
  1856                           plusw1	equ	0xFE3
  1857                           fsr1h	equ	0xFE2
  1858                           fsr1l	equ	0xFE1
  1859                           bsr	equ	0xFE0
  1860                           indf2	equ	0xFDF
  1861                           postinc2	equ	0xFDE
  1862                           postdec2	equ	0xFDD
  1863                           preinc2	equ	0xFDC
  1864                           plusw2	equ	0xFDB
  1865                           fsr2h	equ	0xFDA
  1866                           fsr2l	equ	0xFD9
  1867                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        6
    BSS         3
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     13      22
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          234      0       0

Pointer List with Targets:

    new_year@pdst_bwd	PTR unsigned char  size(2) Largest target is 1
		 -> dst_bwd(COMRAM[1]), 

    new_year@pdst_fwd	PTR unsigned char  size(2) Largest target is 1
		 -> dst_fwd(COMRAM[1]), 

    new_year@pyear	PTR unsigned char  size(2) Largest target is 1
		 -> year(COMRAM[1]), 

    new_year@pday_of_year	PTR unsigned int  size(2) Largest target is 2
		 -> day_of_year(COMRAM[2]), 

    new_year@pleap	PTR unsigned char  size(2) Largest target is 1
		 -> leap(COMRAM[1]), 

    new_day@pday_of_week	PTR unsigned char  size(2) Largest target is 1
		 -> day_of_week(COMRAM[1]), 

    new_day@pday_of_year	PTR unsigned int  size(2) Largest target is 2
		 -> day_of_year(COMRAM[2]), 

    new_day@phour	PTR unsigned char  size(2) Largest target is 1
		 -> hour(COMRAM[1]), 

    check_dst_fwd@pdst_fwd	PTR unsigned char  size(2) Largest target is 1
		 -> dst_fwd(COMRAM[1]), 

    check_dst_fwd@phour	PTR unsigned char  size(2) Largest target is 1
		 -> hour(COMRAM[1]), 

    check_dst_fwd@pday_of_week	PTR unsigned char  size(2) Largest target is 1
		 -> day_of_week(COMRAM[1]), 

    check_dst_bwd@pdst_bwd	PTR unsigned char  size(2) Largest target is 1
		 -> dst_bwd(COMRAM[1]), 

    check_dst_bwd@phour	PTR unsigned char  size(2) Largest target is 1
		 -> hour(COMRAM[1]), 

    check_dst_bwd@pday_of_week	PTR unsigned char  size(2) Largest target is 1
		 -> day_of_week(COMRAM[1]), 


Critical Paths under _main in COMRAM

    _main->_new_year

Critical Paths under _HighISR in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _HighISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _HighISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _HighISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _HighISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _HighISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _HighISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _HighISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _HighISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _HighISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _HighISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _HighISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _HighISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _HighISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _HighISR in BANK13

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    1667
                         _Comp1_init
                    _Interrupts_init
                  _LEDarray_disp_bin
                      _LEDarray_init
                        _Timer0_init
                        _Timer1_init
                      _check_dst_bwd
                      _check_dst_fwd
                            _new_day
                           _new_year
 ---------------------------------------------------------------------------------
 (1) _new_year                                            12     2     10     666
                                              1 COMRAM    12     2     10
 ---------------------------------------------------------------------------------
 (1) _new_day                                              6     0      6     338
                                              1 COMRAM     6     0      6
 ---------------------------------------------------------------------------------
 (1) _check_dst_fwd                                        7     1      6     294
                                              1 COMRAM     7     1      6
 ---------------------------------------------------------------------------------
 (1) _check_dst_bwd                                        7     1      6     294
                                              1 COMRAM     7     1      6
 ---------------------------------------------------------------------------------
 (1) _Timer1_init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Timer0_init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LEDarray_init                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LEDarray_disp_bin                                    2     2      0      75
                                              1 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _Interrupts_init                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Comp1_init                                           0     0      0       0
                           _DAC_init
 ---------------------------------------------------------------------------------
 (2) _DAC_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _HighISR                                              1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Comp1_init
     _DAC_init
   _Interrupts_init
   _LEDarray_disp_bin
   _LEDarray_init
   _Timer0_init
   _Timer1_init
   _check_dst_bwd
   _check_dst_fwd
   _new_day
   _new_year

 _HighISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             DE9      0       0      33        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0       0      12        0.0%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0       0      10        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK13           EA      0       0      31        0.0%
BANK13              EA      0       0      32        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E      D      16       1       23.4%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      16       8        0.0%
DATA                 0      0      16       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Thu Nov 11 23:07:29 2021

                        l15 0552                          l18 0384                          l35 0566  
                        l38 051C                          l57 0570           ??_Interrupts_init 0002  
                       l201 0300                         l116 00CA                         l172 053C  
                       l184 04C6                         l169 043A                         l193 03E8  
                       l188 0480                         l901 0518                         l903 0568  
                       l921 051E                         l931 053A                         l923 052A  
                       l925 052E                         l927 0534                         l881 0564  
                       l929 0538                         l891 050C                         l883 053E  
                       l877 0554                         l893 050E                         l885 0304  
                       l879 055A                         l895 0510                         l887 04F8  
                       l897 0512                         l889 04FA                         l899 0514  
                       u310 03FA                         u311 03F6                         u400 04B6  
                       u320 03C4                         u401 04B2                         u321 03C0  
                       u330 03E0                         u331 03DC                         u340 0258  
                       u500 0120                         u341 0254                         u501 011C  
                       u350 02A4                         u510 015C                         u351 02A0  
                       u511 0158                         u360 02C2                         u600 021C  
                       u520 0172                         u361 02BE                         u601 0218  
                       u521 016E                         u370 0456                         u530 0182  
                       u371 0452                         u531 017E                         u380 0470  
                       u540 0190                         u460 00B0                         u381 046C  
                       u541 018C                         u461 00AC                         u390 049C  
                       u550 01A6                         u470 00C0                         u391 0498  
                       u551 01A2                         u471 00BC                         u560 01D2  
                       u480 00E0                         u561 01CE                         u481 00DC  
                       u570 01E8                         u490 0112                         u571 01E4  
                       u491 010E                         u580 01F8                         u581 01F4  
                       u590 0206                         u591 0202                        l1101 0268  
                      l1111 02A4                        l1103 0272                        l1121 02F4  
                      l1113 02C2                        l1105 027E                        l1201 01E8  
                      l1131 0482                        l1123 043C                        l1115 02D2  
                      l1203 01F8                        l1133 049C                        l1125 0456  
                      l1117 02DC                        l1109 028E                        l1205 0206  
                      l1071 0418                        l1135 04B6                        l1127 0470  
                      l1119 02E8                        l1207 021C                        l1073 0430  
                      l1065 03EA                        l1137 04C2                        l1129 047C  
                      l1081 0386                        l1161 008A                        l1075 0432  
                      l1067 03FA                        l1091 03C4                        l1083 0392  
                      l1171 00C0                        l1163 0096                        l1155 007E  
                      l1077 0436                        l1069 0402                        l1093 03D0  
                      l1085 0396                        l1181 0112                        l1173 00CE  
                      l1165 009A                        l1157 0082                        l1079 0438  
                      l1095 03E0                        l1087 03A4                        l1191 0182  
                      l1183 0120                        l1175 00E0                        l1167 00A0  
                      l1159 0086                        l1089 03AE                        l1097 0240  
                      l1193 0190                        l1185 014C                        l1169 00B0  
                      l1099 0258                        l1195 01A6                        l1187 015C  
                      l1179 00FC                        l1189 0172                        l1197 01C2  
                      l1199 01D2       __end_of_check_dst_bwd 04C8       __end_of_check_dst_fwd 0482  
                      i2l66 0076                        _leap 0015                        _main 007E  
                      _hour 0016                        _year 0012                        fsr2h 000FDA  
                      indf2 000FDF                        fsr1l 000FE1                        fsr2l 000FD9  
                      btemp 0017                        start 007A            __end_of_DAC_init 0568  
           __end_of_HighISR 007A                ___param_bank 000000                  _Comp1_init 04F8  
                     ?_main 0001                       _TMR0H 000FD4                       _TMR1H 000FCE  
                     _TMR0L 000FD3                       _TMR1L 000FCD             __end_of_new_day 03EA  
                     tablat 000FF5                       ttemp5 0018                       ttemp6 001B  
                     ttemp7 001F                       status 000FD8                       wtemp8 0018  
           __initialization 04C8                __end_of_main 0240                      ??_main 000E  
             __activetblptr 000000      __size_of_LEDarray_init 0016                      i2l1141 001A  
                    i2l1151 004E                      i2l1143 002A                      i2l1153 0072  
                    i2l1145 0036                      i2l1147 003E                      i2l1139 000A  
                    i2l1149 0040                   ??_HighISR 0001           _LEDarray_disp_bin 0302  
        ?_LEDarray_disp_bin 0001               ??_Timer0_init 0002               ??_Timer1_init 0002  
       new_day@pday_of_week 0004         new_day@pday_of_year 0006                 ?_Comp1_init 0001  
       ??_LEDarray_disp_bin 0002                      isa$std 000001            __end_of_new_year 0302  
              __pdataCOMRAM 000E                   ??_new_day 0008                      tblptrh 000FF7  
                    tblptrl 000FF6                      tblptru 000FF8                   ?_DAC_init 0001  
             new_year@pleap 0006               new_year@pyear 0004   __end_of_LEDarray_disp_bin 0386  
                __accesstop 0060     __end_of__initialization 04EE               ___rparam_used 000001  
             _LEDarray_init 053E             _Interrupts_init 0568              __pcstackCOMRAM 0001  
       __end_of_Timer0_init 043C         __end_of_Timer1_init 053E                  ??_DAC_init 0002  
       __size_of_Comp1_init 0026       check_dst_bwd@pdst_bwd 0006              ?_LEDarray_init 0001  
                   i2u41_40 001A                     i2u41_41 0016                     i2u42_40 002A  
                   i2u42_41 0026                     i2u43_40 004E                     i2u43_41 004A  
                   i2u44_40 0060                     i2u44_41 0058                     i2u45_48 0062  
__size_of_LEDarray_disp_bin 0084     __end_of_Interrupts_init 0572                     _HighISR 0008  
                 ?_new_year 0002                     __Hparam 0000                     __Lparam 0000  
               _Timer0_init 03EA                 _Timer1_init 051E                     __pcinit 04C8  
    __size_of_check_dst_bwd 0046      __size_of_check_dst_fwd 0046                     __ramtop 0E00  
                   __ptext0 007E                     __ptext1 0240                     __ptext2 0386  
                   __ptext3 043C                     __ptext4 0482                     __ptext5 051E  
                   __ptext6 03EA                     __ptext7 053E                     __ptext8 0302  
                   __ptext9 0568                   _T1CONbits 000FCF                     _dst_bwd 0014  
                   _dst_fwd 0011                     _new_day 0386        end_of_initialization 04EE  
           ??_LEDarray_init 0002       check_dst_fwd@pdst_fwd 0006                  ??_new_year 000C  
                   postdec1 000FE5                     postdec2 000FDD                ??_Comp1_init 0002  
                   postinc0 000FEE                     postinc2 000FDE                   _TRISAbits 000F81  
                 _TRISBbits 000F82                   _TRISFbits 000F86                   _TRISHbits 000F88  
         __size_of_DAC_init 0014               _check_dst_bwd 0482          __end_of_Comp1_init 051E  
             _check_dst_fwd 043C                 _CM1CON0bits 000ED0                 _CM1CON1bits 000ED1  
          ?_Interrupts_init 0001                new_day@phour 0002          check_dst_bwd@phour 0002  
 check_dst_bwd@pday_of_week 0004               __pidataCOMRAM 0572          check_dst_fwd@phour 0002  
       start_initialization 04C8              ?_check_dst_bwd 0002              ?_check_dst_fwd 0002  
               __pbssCOMRAM 0014                    ?_HighISR 0001                ?_Timer0_init 0001  
              ?_Timer1_init 0001           __size_of_new_year 00C2                 _day_of_week 0013  
               _day_of_year 000F                   __pintcode 0008        new_year@pday_of_year 0002  
                  ?_new_day 0002             ??_check_dst_bwd 0008                    _DAC_init 0554  
           ??_check_dst_fwd 0008   check_dst_fwd@pday_of_week 0004                    _LATAbits 000F79  
                  _LATBbits 000F7A                    _LATFbits 000F7E                    _LATHbits 000F80  
                  _IPR0bits 000E1F                    _PIE0bits 000E29                    _PIE2bits 000E2B  
                  _IPR5bits 000E24                    _PIE5bits 000E2E                    _PIR0bits 000E33  
                  _PIR2bits 000E35                   _test_mode 000E                  _CM1NCHbits 000ED2  
                _CM1PCHbits 000ED3                   copy_data0 04DC            __size_of_HighISR 0072  
     __end_of_LEDarray_init 0554                    __Hrparam 0000                    __Lrparam 0000  
                _T0CON0bits 000FD5                  _T0CON1bits 000FD6            __size_of_new_day 0064  
                  __ptext10 04F8                    __ptext11 0554                  _T1GCONbits 000FD0  
   LEDarray_disp_bin@number 0003               __size_of_main 01C2                    _new_year 0240  
                  isa$xinst 000000    __size_of_Interrupts_init 000A                    int$flags 0017  
      __size_of_Timer0_init 0052        __size_of_Timer1_init 0020                  _INTCONbits 000FF2  
               _TMR1CLKbits 000FD2                    intlevel2 0000                _DAC1CON0bits 000EC6  
              _DAC1CON1bits 000EC7            new_year@pdst_bwd 0008            new_year@pdst_fwd 000A  
